{"ast":null,"code":"var _jsxFileName = \"/home/matias/git/unq-ui-matias-cardozo-trabajo-final/src/components/SinglePlayer.js\";\nimport React, { useState } from 'react';\nimport Player from '../components/Player';\n\nfunction SinglePlayer() {\n  //Jugador\n  const [eleccionJugador, setEleccionjugador] = useState('');\n  const [ganadasJugador, setGanadasJugador] = useState(0);\n  const [juegoTerminado, setJuegoTerminado] = useState(false); //CPU\n\n  const eleccionesPosibles = ['Piedra', 'Papel', 'Tijeras', 'Lagarto', 'Spock'];\n  const [eleccionCPU, setEleccionCPU] = useState('');\n  const [ganadasCPU, setGanadasCPU] = useState(0);\n\n  function verificarGanador(opcJug1, opcCPU) {\n    var rta = '';\n\n    if (opcJug1 === 'Piedra' && opcCPU === 'Tijeras') {\n      rta = 'jug1';\n      return rta;\n    }\n\n    if (opcJug1 === 'Piedra' && opcCPU === 'Lagarto') {\n      rta = 'jug1';\n      return rta;\n    }\n\n    if (opcJug1 === 'Piedra' && opcCPU === 'Piedra') {\n      rta = 'empate';\n      return rta;\n    } else {\n      rta = 'jug2';\n      return rta;\n    }\n  }\n\n  function jugar(opcJug1, opcCPU) {\n    if (!juegoTerminado) {\n      var eleccionRandom = eleccionesPosibles[Math.floor(Math.random() * eleccionesPosibles.length)];\n      setEleccionCPU(eleccionRandom);\n      var ganador = verificarGanador(opcJug1, opcCPU);\n\n      if (ganador === 'jug1') {\n        setGanadasJugador(ganadasJugador + 1);\n      }\n\n      if (ganador === 'jug2') {\n        setGanadasCPU(ganadasCPU + 1);\n      }\n\n      console.log(ganador);\n      setJuegoTerminado(true);\n    } else {//tirar error\n    }\n  }\n\n  function reset() {\n    setEleccionjugador('');\n    setEleccionCPU('');\n    setJuegoTerminado(false);\n  }\n\n  const verEleccion = eleccion => {\n    setEleccionjugador(eleccion);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Player, {\n    verEleccion: verEleccion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"boton-jugar\",\n    type: \"button\",\n    onClick: () => jugar(eleccionJugador, eleccionCPU),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Jugar\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"boton-jugar\",\n    type: \"button\",\n    onClick: () => reset(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Jugar de Nuevo\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"El CPU eligi\\xF3 : \", eleccionCPU), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Ganadas CPU: \", ganadasCPU), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Ganadas Jug: \", ganadasJugador), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"eleccion single: \", eleccionJugador));\n}\n\nexport default SinglePlayer;","map":{"version":3,"sources":["/home/matias/git/unq-ui-matias-cardozo-trabajo-final/src/components/SinglePlayer.js"],"names":["React","useState","Player","SinglePlayer","eleccionJugador","setEleccionjugador","ganadasJugador","setGanadasJugador","juegoTerminado","setJuegoTerminado","eleccionesPosibles","eleccionCPU","setEleccionCPU","ganadasCPU","setGanadasCPU","verificarGanador","opcJug1","opcCPU","rta","jugar","eleccionRandom","Math","floor","random","length","ganador","console","log","reset","verEleccion","eleccion"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport Player from '../components/Player'\n\n\nfunction SinglePlayer(){\n\n    //Jugador\n    const [eleccionJugador, setEleccionjugador]= useState('');\n    const [ganadasJugador, setGanadasJugador]= useState(0);\n    const [juegoTerminado, setJuegoTerminado]= useState(false);\n\n    //CPU\n    const eleccionesPosibles = ['Piedra', 'Papel', 'Tijeras', 'Lagarto', 'Spock'];\n    const [eleccionCPU, setEleccionCPU] = useState('')\n    const [ganadasCPU, setGanadasCPU]= useState(0);\n    \n\n    function verificarGanador(opcJug1 , opcCPU){\n\n        var rta= '';\n        if(opcJug1 ==='Piedra' && opcCPU=== 'Tijeras'){\n            rta= 'jug1';\n            return rta;\n        }\n         if(opcJug1 ==='Piedra' && opcCPU=== 'Lagarto'){\n           rta='jug1';\n           return rta;\n        }\n        if(opcJug1 ==='Piedra' && opcCPU=== 'Piedra'){\n           rta='empate';\n           return rta;\n        }\n        else{\n            rta='jug2';\n            return rta;\n        }\n        \n    }\n\n    function jugar(opcJug1 , opcCPU){\n        if(!juegoTerminado){\n            var eleccionRandom= eleccionesPosibles[Math.floor(Math.random() * eleccionesPosibles.length)];\n            setEleccionCPU(eleccionRandom);\n            var ganador =verificarGanador(opcJug1,opcCPU);\n            if (ganador ==='jug1'){\n                setGanadasJugador(ganadasJugador+1)\n            }\n            if(ganador==='jug2'){\n                setGanadasCPU(ganadasCPU+1)\n            }\n            console.log(ganador)\n            setJuegoTerminado(true)\n        }\n        else{\n            //tirar error\n        }\n        \n    }\n\n    function reset(){\n        setEleccionjugador('');\n        setEleccionCPU('');\n        setJuegoTerminado(false);\n    }\n\n\n    const verEleccion = eleccion =>{\n        setEleccionjugador(eleccion)\n    }\n\n    return(\n        <div>\n            <Player verEleccion={verEleccion}/>\n            {/* <Player/> */}\n            <button className=\"boton-jugar\" type=\"button\" onClick={() => jugar(eleccionJugador,eleccionCPU)}>Jugar</button>\n            <button className=\"boton-jugar\" type=\"button\" onClick={()=>reset()} >Jugar de Nuevo</button>\n            <h1>El CPU eligi√≥ : {eleccionCPU}</h1>\n            <h3>Ganadas CPU: {ganadasCPU}</h3>\n            <h3>Ganadas Jug: {ganadasJugador}</h3>\n            <h3>eleccion single: {eleccionJugador}</h3>\n        </div>\n    )\n}\n\nexport default SinglePlayer;"]},"metadata":{},"sourceType":"module"}