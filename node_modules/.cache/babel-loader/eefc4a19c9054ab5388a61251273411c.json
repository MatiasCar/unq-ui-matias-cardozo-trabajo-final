{"ast":null,"code":"var _jsxFileName = \"/home/matias/git/unq-ui-matias-cardozo-trabajo-final/src/components/SinglePlayer.js\";\nimport React, { useState } from 'react';\nimport Player from '../components/Player';\nimport Ganador from '../components/Ganador';\n\nfunction SinglePlayer() {\n  //Jugador\n  const [eleccionJugador, setEleccionjugador] = useState('');\n  const [ganadasJugador, setGanadasJugador] = useState(0);\n  const [juegoTerminado, setJuegoTerminado] = useState(false); //CPU\n\n  const eleccionesPosibles = ['Piedra', 'Papel', 'Tijera', 'Lagarto', 'Spock'];\n  const [eleccionCpu, setEleccionCPU] = useState('');\n  const [ganadasCPU, setGanadasCPU] = useState(0); //Mostrar ganador\n\n  /* const [ganador, setGanador]= useState(''); */\n\n  const [ganadorVisible, setGanadorVisible] = useState(false);\n\n  function verificarGanador(opcJug1, opcCPU) {\n    var rta = ''; //Casos para eleccion 'Piedra' del jugador\n\n    if (opcJug1 === 'Piedra') {\n      //gana contra:\n      if (opcCPU === 'Tijera' || opcCPU === 'Lagarto') {\n        rta = 'jug1';\n      } //pierde contra:\n\n\n      if (opcCPU === 'Papel' || opcCPU === 'Spock') {\n        rta = 'jug2';\n      }\n\n      if (opcCPU === 'Piedra') {\n        rta = 'empate';\n      }\n\n      return rta;\n    } //Casos para eleccion 'Papel' del jugador\n\n\n    if (opcJug1 === 'Papel') {\n      //gana contra:\n      if (opcCPU === 'Piedra' || opcCPU === 'Spock') {\n        rta = 'jug1';\n      } //pierde contra:\n\n\n      if (opcCPU === 'Tijera' || opcCPU === 'Lagarto') {\n        rta = 'jug2';\n      }\n\n      if (opcCPU === 'Papel') {\n        rta = 'empate';\n      }\n\n      return rta;\n    } //Casos para eleccion 'Tijera' del jugador\n\n\n    if (opcJug1 === 'Tijera') {\n      //gana contra:\n      if (opcCPU === 'Papel' || opcCPU === 'Lagarto') {\n        rta = 'jug1';\n      } //pierde contra:\n\n\n      if (opcCPU === 'Piedra' || opcCPU === 'Spock') {\n        rta = 'jug2';\n      }\n\n      if (opcCPU === 'Tijera') {\n        rta = 'empate';\n      }\n\n      return rta;\n    } //Casos para eleccion 'Lagarto' del jugador\n\n\n    if (opcJug1 === 'Lagarto') {\n      //gana contra:\n      if (opcCPU === 'Papel' || opcCPU === 'Spock') {\n        rta = 'jug1';\n      } //pierde contra:\n\n\n      if (opcCPU === 'Piedra' || opcCPU === 'Tijera') {\n        rta = 'jug2';\n      }\n\n      if (opcCPU === 'Lagarto') {\n        rta = 'empate';\n      }\n\n      return rta;\n    } //Casos para eleccion 'Spock' del jugador\n\n\n    if (opcJug1 === 'Spock') {\n      //gana contra:\n      if (opcCPU === 'Tijera' || opcCPU === 'Piedra') {\n        rta = 'jug1';\n      } //pierde contra:\n\n\n      if (opcCPU === 'Lagarto' || opcCPU === 'Papel') {\n        rta = 'jug2';\n      }\n\n      if (opcCPU === 'Spock') {\n        rta = 'empate';\n      }\n\n      return rta;\n    }\n  }\n\n  function jugar(opcJug1) {\n    if (!juegoTerminado && opcJug1 !== '') {\n      //Seteo una eleccion random para el cpu\n      var eleccionRandom = eleccionesPosibles[Math.floor(Math.random() * eleccionesPosibles.length)];\n      setEleccionCPU(eleccionRandom);\n      var ganador = verificarGanador(opcJug1, eleccionRandom);\n\n      if (ganador === 'jug1') {\n        setGanadasJugador(ganadasJugador + 1);\n        setGanador('Jugador 1');\n      }\n\n      if (ganador === 'jug2') {\n        setGanadasCPU(ganadasCPU + 1);\n        setGanador('CPU');\n        mostrarGanador('CPU');\n      }\n\n      console.log(ganador);\n      setJuegoTerminado(true);\n    } else {//tirar error\n    }\n  }\n\n  function mostrarGanador(caca) {\n    setGanadorVisible(true);\n\n    if (ganadorVisible) {\n      return /*#__PURE__*/React.createElement(Ganador, Object.assign({}, caca, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 20\n        }\n      }));\n    }\n  }\n\n  function reset() {\n    setEleccionjugador('');\n    setEleccionCPU('');\n    setJuegoTerminado(false);\n    setGanador('');\n    setGanadorVisible(false);\n  }\n\n  const verEleccion = eleccion => {\n    setEleccionjugador(eleccion);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Player, {\n    verEleccion: verEleccion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"boton-jugar\",\n    type: \"button\",\n    onClick: () => jugar(eleccionJugador),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, \"Jugar\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"boton-jugar\",\n    type: \"button\",\n    onClick: () => reset(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, \"Jugar de Nuevo\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, \"El CPU eligi\\xF3 : \", eleccionCpu), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"Ganadas CPU: \", ganadasCPU), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, \"Ganadas Jug: \", ganadasJugador), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, \"eleccion single: \", eleccionJugador), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, \"Ganador: \"));\n}\n\nexport default SinglePlayer;","map":{"version":3,"sources":["/home/matias/git/unq-ui-matias-cardozo-trabajo-final/src/components/SinglePlayer.js"],"names":["React","useState","Player","Ganador","SinglePlayer","eleccionJugador","setEleccionjugador","ganadasJugador","setGanadasJugador","juegoTerminado","setJuegoTerminado","eleccionesPosibles","eleccionCpu","setEleccionCPU","ganadasCPU","setGanadasCPU","ganadorVisible","setGanadorVisible","verificarGanador","opcJug1","opcCPU","rta","jugar","eleccionRandom","Math","floor","random","length","ganador","setGanador","mostrarGanador","console","log","caca","reset","verEleccion","eleccion"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport Player from '../components/Player'\nimport Ganador from '../components/Ganador'\n\n\nfunction SinglePlayer(){\n\n    //Jugador\n    const [eleccionJugador, setEleccionjugador]= useState('');\n    const [ganadasJugador, setGanadasJugador]= useState(0);\n    const [juegoTerminado, setJuegoTerminado]= useState(false);\n\n    //CPU\n    const eleccionesPosibles = ['Piedra', 'Papel', 'Tijera', 'Lagarto', 'Spock'];\n    const [eleccionCpu,setEleccionCPU]= useState('');\n    const [ganadasCPU, setGanadasCPU]= useState(0);\n    \n\n    //Mostrar ganador\n    /* const [ganador, setGanador]= useState(''); */\n    const [ganadorVisible, setGanadorVisible]= useState(false)\n\n\n\n    function verificarGanador(opcJug1 , opcCPU){\n\n        var rta= '';\n\n        //Casos para eleccion 'Piedra' del jugador\n        if(opcJug1 === 'Piedra'){\n            //gana contra:\n            if(opcCPU === 'Tijera' || opcCPU === 'Lagarto'){\n                rta = 'jug1'\n            }\n            //pierde contra:\n            if(opcCPU === 'Papel' || opcCPU === 'Spock'){\n                rta = 'jug2'\n            }\n            if(opcCPU === 'Piedra'){\n                rta = 'empate'\n            }\n            return rta;\n        }\n\n        //Casos para eleccion 'Papel' del jugador\n        if(opcJug1 === 'Papel'){\n            //gana contra:\n            if(opcCPU === 'Piedra' || opcCPU === 'Spock'){\n                rta = 'jug1'\n            }\n            //pierde contra:\n            if(opcCPU === 'Tijera' || opcCPU === 'Lagarto'){\n                rta = 'jug2'\n            }\n            if(opcCPU === 'Papel'){\n                rta = 'empate'\n            }\n            return rta;\n        }\n        //Casos para eleccion 'Tijera' del jugador\n        if(opcJug1 === 'Tijera'){\n            //gana contra:\n            if(opcCPU === 'Papel' || opcCPU === 'Lagarto'){\n                rta = 'jug1'\n            }\n            //pierde contra:\n            if(opcCPU === 'Piedra' || opcCPU === 'Spock'){\n                rta = 'jug2'\n            }\n            if(opcCPU === 'Tijera'){\n                rta = 'empate'\n            }\n            return rta;\n        }\n        //Casos para eleccion 'Lagarto' del jugador\n        if(opcJug1 === 'Lagarto'){\n            //gana contra:\n            if(opcCPU === 'Papel' || opcCPU === 'Spock'){\n                rta = 'jug1'\n            }\n            //pierde contra:\n            if(opcCPU === 'Piedra' || opcCPU === 'Tijera'){\n                rta = 'jug2'\n            }\n            if(opcCPU === 'Lagarto'){\n                rta = 'empate'\n            }\n            return rta;\n        }\n        //Casos para eleccion 'Spock' del jugador\n        if(opcJug1 === 'Spock'){\n            //gana contra:\n            if(opcCPU === 'Tijera' || opcCPU === 'Piedra'){\n                rta = 'jug1'\n            }\n            //pierde contra:\n            if(opcCPU === 'Lagarto' || opcCPU === 'Papel'){\n                rta = 'jug2'\n            }\n            if(opcCPU === 'Spock'){\n                rta = 'empate'\n            }\n            return rta;\n        }\n \n    }\n\n    function jugar(opcJug1){\n        if(!juegoTerminado && opcJug1 !==''){\n            //Seteo una eleccion random para el cpu\n            var eleccionRandom = eleccionesPosibles[Math.floor(Math.random() * eleccionesPosibles.length)]\n            setEleccionCPU(eleccionRandom);\n            \n            var ganador =verificarGanador(opcJug1, eleccionRandom);\n            if (ganador ==='jug1'){\n                setGanadasJugador(ganadasJugador+1)\n                setGanador('Jugador 1')\n            }\n            if(ganador==='jug2'){\n                setGanadasCPU(ganadasCPU+1)\n                setGanador('CPU')\n                mostrarGanador('CPU')\n            }\n            console.log(ganador)\n            setJuegoTerminado(true)\n        }\n        else{\n            //tirar error\n        }\n        \n    }\n\n    function mostrarGanador(caca){\n        setGanadorVisible(true);\n        if(ganadorVisible){\n            return <Ganador {...caca}/>\n        }\n    }\n\n    function reset(){\n        setEleccionjugador('');\n        setEleccionCPU('')\n        setJuegoTerminado(false);\n        setGanador('')\n        setGanadorVisible(false)\n    }\n\n\n    const verEleccion = eleccion =>{\n        setEleccionjugador(eleccion)\n    }\n\n    return(\n        <div>\n            <Player verEleccion={verEleccion}/>\n            <button className=\"boton-jugar\" type=\"button\" onClick={() => jugar(eleccionJugador)}>Jugar</button>\n            <button className=\"boton-jugar\" type=\"button\" onClick={()=>reset()} >Jugar de Nuevo</button>\n            <h1>El CPU eligió : {eleccionCpu}</h1>\n            <h3>Ganadas CPU: {ganadasCPU}</h3>\n            <h3>Ganadas Jug: {ganadasJugador}</h3>\n            <h3>eleccion single: {eleccionJugador}</h3>\n            <h1>Ganador: </h1>\n        </div>\n    )\n}\n\nexport default SinglePlayer;"]},"metadata":{},"sourceType":"module"}